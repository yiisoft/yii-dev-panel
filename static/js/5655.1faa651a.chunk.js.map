{"version":3,"file":"static/js/5655.1faa651a.chunk.js","mappings":"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","sources":["../../../node_modules/immupdate/es/immupdate.js"],"sourcesContent":["//--------------------------------------\n//  Shallow update\n//--------------------------------------\n/** Performs a shallow update of an object using a partial object of the same shape. A new object is returned. */\nexport function update(host, spec) {\n    var result = cloneObject(host);\n    var hasChanged = false;\n    for (var key in spec) {\n        var specValue = spec[key];\n        if (specValue === DELETE) {\n            delete result[key];\n            hasChanged = hasChanged || key in host;\n        }\n        else {\n            result[key] = specValue;\n            hasChanged = hasChanged || host[key] !== specValue;\n        }\n    }\n    return hasChanged ? result : host;\n}\n// We lie about the public type so that only a property that is optional or that can be assigned to undefined can be DELETE'd\n/** Marker used to delete a key */\nexport var DELETE = {};\nvar _Updater = /** @class */ (function () {\n    function _Updater(data) {\n        this.data = data;\n    }\n    _Updater.prototype.at = function (keyOrIndex) {\n        return new _Updater({ type: 'at', parent: this, field: keyOrIndex });\n    };\n    _Updater.prototype.set = function (value) {\n        return this.modify(function (_) { return value; });\n    };\n    _Updater.prototype[\"delete\"] = function () {\n        return this.modify(function (_) { return DELETE; });\n    };\n    _Updater.prototype.modify = function (modifier) {\n        var target = this.findTarget();\n        var result = this.cloneForUpdate(target);\n        if (result.name === 'aborted')\n            return target;\n        var clonedTarget = result.clonedTarget, leafHost = result.leafHost, field = result.field, structurallyModified = result.structurallyModified;\n        var leafHostIsOption = isOptionLike(leafHost);\n        var currentValue = leafHostIsOption ? leafHost.get() : leafHost[field];\n        var value = modifier(currentValue);\n        // Actually shallow update, e.g deepUpdate(obj).set(otherObj)\n        // Not much point but the typings make it possible ¯\\_(ツ)_/¯\n        if (field === '')\n            return leafHostIsOption\n                ? leafHost.Option(value)\n                : value;\n        var modified = structurallyModified;\n        if (value === DELETE) {\n            if (Array.isArray(leafHost) && typeof field === 'number') {\n                if (field >= leafHost.length)\n                    return target;\n                modified = true;\n                leafHost.splice(field, 1);\n            }\n            else if (leafHostIsOption) {\n                if (field in leafHost.value)\n                    modified = true;\n                delete leafHost.value[field];\n            }\n            else {\n                if (field in leafHost)\n                    modified = true;\n                delete leafHost[field];\n            }\n        }\n        else {\n            if (currentValue !== value)\n                modified = true;\n            if (leafHostIsOption) {\n                leafHost.value[field] = value;\n            }\n            else {\n                // Setting a T | undefined as the value of an Option\n                // should actually build a new Option<T>\n                var finalValue = isOptionLike(currentValue)\n                    ? currentValue.Option(value)\n                    : value;\n                leafHost[field] = finalValue;\n            }\n        }\n        return modified ? clonedTarget : target;\n    };\n    _Updater.prototype.withDefault = function (value) {\n        return new _Updater({ type: 'withDefault', parent: this, defaultValue: clone(value) });\n    };\n    _Updater.prototype.abortIfNot = function (predicate) {\n        return new _Updater({ type: 'abortIfNot', parent: this, predicate: predicate });\n    };\n    _Updater.prototype.abortIfUndef = function () {\n        return this.abortIfNot(function (value) {\n            if (isOptionLike(value))\n                return value.type === 'some';\n            return value !== undefined;\n        });\n    };\n    _Updater.prototype.findTarget = function () {\n        var current = this;\n        while (true) {\n            if (current.data.type === 'root')\n                return current.data.target;\n            current = current.data.parent;\n        }\n    };\n    _Updater.prototype.parentUpdaters = function () {\n        var updaters = [this];\n        var parentUpdater = this.data.parent;\n        // Ignore the root updater\n        while (parentUpdater && parentUpdater.data.parent) {\n            updaters.unshift(parentUpdater);\n            parentUpdater = parentUpdater.data.parent;\n        }\n        return updaters;\n    };\n    _Updater.prototype.getNextValue = function (previousHost, host, field, isLast) {\n        var hostIsOption = isOptionLike(host);\n        var previousHostIsOption = isOptionLike(previousHost);\n        if (this.data.type === 'at') {\n            var newField = this.data.field;\n            if (hostIsOption) {\n                if (host.type === 'none')\n                    return { host: undefined, field: newField };\n                host.value = clone(host.value);\n                var value = host.value[newField];\n                var nextValue = clone(value);\n                var newHost_1 = isLast ? host : nextValue;\n                host.value[this.data.field] = nextValue;\n                return { host: newHost_1, field: newField };\n            }\n            else {\n                if (!host)\n                    return { host: undefined, field: newField };\n                var value = host[newField];\n                var nextValue = clone(value);\n                var newHost_2 = isLast ? host : nextValue;\n                if (nextValue !== undefined)\n                    host[this.data.field] = nextValue;\n                return { host: newHost_2, field: newField };\n            }\n        }\n        if (this.data.type === 'abortIfNot' && this.data.predicate(host) === false) {\n            return { host: host, field: field, aborted: true };\n        }\n        if (this.data.type === 'withDefault' && (previousHost[field] === undefined || isOptionLike(previousHost[field]))) {\n            var nextValue = isOptionLike(host)\n                ? host.Option(this.data.defaultValue)\n                : this.data.defaultValue;\n            var newHost_3 = isLast\n                ? previousHost\n                : nextValue;\n            if (previousHostIsOption)\n                previousHost.value[field] = nextValue;\n            else\n                previousHost[field] = nextValue;\n            return { host: newHost_3, field: field, structurallyModified: true };\n        }\n        var newHost = isLast ? previousHost : host;\n        return { host: newHost, field: field };\n    };\n    _Updater.prototype.cloneForUpdate = function (target) {\n        var updaters = this.parentUpdaters();\n        var obj = cloneContainer(target);\n        var previousHost = obj;\n        var host = obj;\n        var field = '';\n        var structurallyModified = false;\n        for (var i = 0; i < updaters.length; i++) {\n            var result = updaters[i].getNextValue(previousHost, host, field, i === updaters.length - 1);\n            if (result.aborted)\n                return { name: 'aborted' };\n            structurallyModified = structurallyModified || result.structurallyModified;\n            previousHost = host;\n            host = result.host;\n            field = result.field;\n        }\n        return {\n            name: 'result',\n            clonedTarget: obj,\n            leafHost: host,\n            field: field,\n            structurallyModified: structurallyModified\n        };\n    };\n    return _Updater;\n}());\n// TODO: This probably won't fly with some weird edge cases like deepUpdate(new Date()).set(), etc\n// For completion sake, we should probably fix it.\nfunction isContainer(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction clone(obj) {\n    return isContainer(obj) ? cloneContainer(obj) : obj;\n}\nfunction cloneContainer(obj) {\n    if (Array.isArray(obj))\n        return obj.slice();\n    if (isOptionLike(obj))\n        return obj.map(identity);\n    return cloneObject(obj);\n}\nfunction cloneObject(obj) {\n    var cloned = {};\n    Object.keys(obj).forEach(function (key) { cloned[key] = obj[key]; });\n    return cloned;\n}\nfunction identity(x) {\n    return x;\n}\nfunction isOptionLike(obj) {\n    return !!obj && (obj.type === 'some' || obj.type === 'none') && obj.Option;\n}\nexport function deepUpdate(target) {\n    return new _Updater({ type: 'root', target: target });\n}\n"],"names":["update","host","spec","result","cloneObject","hasChanged","key","specValue","DELETE","_Updater","data","this","prototype","at","keyOrIndex","type","parent","field","set","value","modify","_","modifier","target","findTarget","cloneForUpdate","name","clonedTarget","leafHost","structurallyModified","leafHostIsOption","isOptionLike","currentValue","get","Option","modified","Array","isArray","length","splice","finalValue","withDefault","defaultValue","clone","abortIfNot","predicate","abortIfUndef","undefined","current","parentUpdaters","updaters","parentUpdater","unshift","getNextValue","previousHost","isLast","hostIsOption","previousHostIsOption","newField","nextValue","newHost_1","newHost_2","aborted","newHost_3","obj","cloneContainer","i","isContainer","slice","map","identity","cloned","Object","keys","forEach","x","deepUpdate"],"sourceRoot":""}