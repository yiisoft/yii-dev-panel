{"version":3,"file":"static/js/734.91bdc7a5.chunk.js","mappings":"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","sources":["../../../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../../../node_modules/react-router/lib/use-sync-external-store-shim/index.ts","../../../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts","../../../node_modules/react-router/lib/context.ts","../../../node_modules/react-router/lib/hooks.tsx","../../../node_modules/react-router/lib/components.tsx","../../../node_modules/react-router/index.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own&nbsp;\n          <code style={codeStyles}>ErrorBoundary</code> prop on&nbsp;\n          <code style={codeStyles}>&lt;Route&gt;</code>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      if (match.route.ErrorBoundary) {\n        errorElement = <match.route.ErrorBoundary />;\n      } else if (match.route.errorElement) {\n        errorElement = match.route.errorElement;\n      } else {\n        errorElement = <DefaultErrorComponent />;\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode = outlet;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{ outlet, matches }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  let getState = React.useCallback(() => router.state, [router]);\n\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    getState,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    getState\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction detectErrorBoundary(route: RouteObject) {\n  if (__DEV__) {\n    if (route.Component && route.element) {\n      warning(\n        false,\n        \"You should not include both `Component` and `element` on your route - \" +\n          \"`element` will be ignored.\"\n      );\n    }\n    if (route.ErrorBoundary && route.errorElement) {\n      warning(\n        false,\n        \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n          \"`errorElement` will be ignored.\"\n      );\n    }\n  }\n\n  // Note: this check also occurs in createRoutesFromChildren so update\n  // there if you change this\n  return Boolean(route.ErrorBoundary) || Boolean(route.errorElement);\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: FutureConfig;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    detectErrorBoundary,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  detectErrorBoundary as UNSAFE_detectErrorBoundary,\n};\n"],"names":["is","Object","x","y","useState","React","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","prevValue","value","nextValue","error","shim","window","document","createElement","subscribe","getServerSnapshot","_useState","_useState2","_slicedToArray","forceUpdate","useSyncExternalStore","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","RouteErrorContext","useHref","to","_temp","relative","useInRouterContext","UNSAFE_invariant","_React$useContext","basename","navigator","_useResolvedPath","useResolvedPath","hash","pathname","search","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","matchPath","useNavigate","_React$useContext2","locationPathname","routePathnamesJson","JSON","stringify","UNSAFE_getPathContributingMatches","map","match","pathnameBase","activeRef","current","options","path","resolveTo","parse","replace","push","state","go","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","length","params","_temp2","useRoutes","routes","locationArg","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","locationFromContext","route","_parsedLocationArg$pa","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","renderedMatches","_renderMatches","assign","encodeLocation","undefined","_extends","key","Action","DefaultErrorComponent","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","DataRouterHook","DataRouterStateHook","RenderErrorBoundary","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_createClass","errorInfo","console","this","routeContext","children","component","RenderedRoute","_ref","dataRouterContext","static","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","id","dataRouterState","errors","errorIndex","findIndex","m","Math","min","reduceRight","index","concat","getChildren","Component","element","useDataRouterContext","hookName","ctx","useDataRouterState","useCurrentRouteId","useRouteContext","thisRoute","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","revalidation","useMatches","_useDataRouterState","UseMatches","loaderData","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","_state$errors","UseRouteError","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","_React$useState","String","blockerKey","blockerFunction","args","blocker","getBlocker","deleteBlocker","blockers","get","AwaitRenderStatus","RouterProvider","fallbackElement","getState","n","navigate","opts","preventScrollReset","Router","historyAction","initialized","Routes","MemoryRouter","_ref2","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","_React$useState3","action","_React$useState4","setState","listen","Navigate","_ref3","Outlet","Route","_props","_ref4","_ref4$basename","basenameProp","_ref4$children","locationProp","_ref4$navigationType","_ref4$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","stripBasename","_ref5","createRoutesFromChildren","Await","_ref6","resolve","AwaitErrorBoundary","ResolveAwait","neverSettledPromise","Promise","_React$Component2","_super2","_this2","_this$props","promise","pending","renderError","reject","catch","defineProperty","_tracked","success","then","AbortedDeferredError","_ref7","toRender","parentPath","treePath","_toConsumableArray","type","join","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","lazy","apply","renderMatches","detectErrorBoundary","Boolean","createMemoryRouter","createRouter","future","hydrationData","initialize"],"sourceRoot":""}